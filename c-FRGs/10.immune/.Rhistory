######Video source: https://ke.biowolf.cn
######生信自学网: https://www.biowolf.cn/
######微信公众号：biowolf_cn
######合作邮箱：biowolf@foxmail.com
######答疑微信: 18520221056
#install.packages('e1071')
#if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
#BiocManager::install("preprocessCore")
inputFile="normalize.txt"      #表达数据文件
#setwd("C:\\biowolf\\geoCRG\\11.CIBERSORT")      #设置工作目录
source("geoCRG11.CIBERSORT.R")       #引用包
#免疫细胞浸润分析
outTab=CIBERSORT("ref.txt", inputFile, perm=1000, QN=T)
######Video source: https://ke.biowolf.cn
######生信自学网: https://www.biowolf.cn/
######微信公众号：biowolf_cn
######合作邮箱：biowolf@foxmail.com
######答疑微信: 18520221056
#install.packages("reshape2")
#install.packages("ggpubr")
#引用包
library(reshape2)
library(ggpubr)
inputFile="CIBERSORT-Results.txt"     #免疫细胞浸润的结果文件
#setwd("C:\\biowolf\\geoCRG\\12.barplot")     #设置工作目录
#读取免疫细胞浸润文件
rt=read.table(inputFile, header=T, sep="\t", check.names=F, row.names=1)
#对样品进行分组
con=grepl("_Control", rownames(rt), ignore.case=T)
treat=grepl("_Treat", rownames(rt), ignore.case=T)
conData=rt[con,]
treatData=rt[treat,]
conNum=nrow(conData)
treatNum=nrow(treatData)
data=t(rbind(conData,treatData))
#绘制柱状图
pdf(file="barplot.pdf", width=14.5, height=8.5)
col=rainbow(nrow(data), s=0.7, v=0.7)
par(las=1,mar=c(8,5,4,16),mgp=c(3,0.1,0),cex.axis=1.5)
a1=barplot(data,col=col,xaxt="n",yaxt="n",ylab="Relative Percent",cex.lab=1.8)
a2=axis(2,tick=F,labels=F)
axis(2,a2,paste0(a2*100,"%"))
par(srt=0,xpd=T)
rect(xleft = a1[1]-0.5, ybottom = -0.01, xright = a1[conNum]+0.5, ytop = -0.06,col="green")
text(a1[conNum]/2,-0.035,"Control",cex=1.8)
rect(xleft = a1[conNum]+0.5, ybottom = -0.01, xright =a1[length(a1)]+0.5, ytop = -0.06,col="red")
text((a1[length(a1)]+a1[conNum])/2,-0.035,"Treat",cex=1.8)
ytick2 = cumsum(data[,ncol(data)])
ytick1 = c(0,ytick2[-length(ytick2)])
legend(par('usr')[2]*0.98,par('usr')[4],legend=rownames(data),col=col,pch=15,bty="n",cex=1.2)
dev.off()
##################绘制箱线图##################
#把数据转换成ggplot2输入文件
Type=gsub("(.*)\\_(.*)", "\\2", rownames(rt))
data=cbind(as.data.frame(t(data)), Type)
data=melt(data, id.vars=c("Type"))
colnames(data)=c("Type", "Immune", "Expression")
#绘制箱线图
group=levels(factor(data$Type))
bioCol=c("#0066FF","#FF0000","#6E568C","#7CC767","#223D6C","#D20A13","#FFD121","#088247","#11AA4D")
bioCol=bioCol[1:length(group)]
boxplot=ggboxplot(data, x="Immune", y="Expression", color="Type",
xlab="",
ylab="Fraction",
legend.title="Type",
add="point",
width=0.8,
palette=bioCol)+
rotate_x_text(50)+
stat_compare_means(aes(group=Type),symnum.args=list(cutpoints=c(0, 0.001, 0.01, 0.05, 1), symbols=c("***", "**", "*", "")), label="p.signif")
#输出图片
pdf(file="immune.diff.pdf", width=8, height=6)
print(boxplot)
dev.off()
######Video source: https://ke.biowolf.cn
######生信自学网: https://www.biowolf.cn/
######微信公众号：biowolf_cn
######合作邮箱：biowolf@foxmail.com
######答疑微信: 18520221056
#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#BiocManager::install("limma")
#install.packages("tidyverse")
#install.packages("ggplot2")
#install.packages("reshape2")
#引用包
library(limma)
library(reshape2)
library(tidyverse)
library(ggplot2)
expFile="normalize.txt"             #表达数据
geneFile="hubGenes.txt"           #基因列表文件
immFile="CIBERSORT-Results.txt"     #免疫细胞浸润结果文件
#setwd("C:\\biowolf\\geoFRG\\18.immuneCor")     #设置工作目录
#读取文件,并对输入文件进行整理
rt=read.table(expFile, header=T, sep="\t", check.names=F)
rt=as.matrix(rt)
rownames(rt)=rt[,1]
exp=rt[,2:ncol(rt)]
dimnames=list(rownames(exp),colnames(exp))
data=matrix(as.numeric(as.matrix(exp)),nrow=nrow(exp),dimnames=dimnames)
data=avereps(data)
data=data[rowMeans(data)>0,]
#去除对照组样品
group=gsub("(.*)\\_(.*)", "\\2", colnames(data))
data=data[,group=="Treat",drop=F]
#读取基因列表文件, 提取特征基因的表达量
geneRT=read.table(geneFile, header=F, sep="\t", check.names=F)
data=data[as.vector(geneRT[,1]),]
data=t(data)
#读取免疫细胞结果文件，并对数据进行整理
immune=read.table(immFile, header=T, sep="\t", check.names=F, row.names=1)
sameSample=intersect(row.names(data), row.names(immune))
data=data[sameSample,,drop=F]
immune=immune[sameSample,,drop=F]
#相关性分析
outTab=data.frame()
for(cell in colnames(immune)){
if(sd(immune[,cell])==0){next}
for(gene in colnames(data)){
x=as.numeric(immune[,cell])
y=as.numeric(data[,gene])
corT=cor.test(x,y,method="spearman")
cor=corT$estimate
pvalue=corT$p.value
text=ifelse(pvalue<0.001,"***",ifelse(pvalue<0.01,"**",ifelse(pvalue<0.05,"*","")))
outTab=rbind(outTab,cbind(Gene=gene, Immune=cell, cor, text, pvalue))
}
}
#绘制相关性热图
outTab$cor=as.numeric(outTab$cor)
pdf(file="cor-hub.pdf", width=7, height=4.5)
ggplot(outTab, aes(Immune, Gene)) +
geom_tile(aes(fill = cor), colour = "grey", size = 1)+
scale_fill_gradient2(low = "#5C5DAF", mid = "white", high = "#EA2E2D") +
geom_text(aes(label=text),col ="black",size = 3) +
theme_minimal() +    #去掉背景
theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8, face = "bold"),   #x轴字体
axis.text.y = element_text(size = 8, face = "bold")) +       #y轴字体
labs(fill =paste0("***  p<0.001","\n", "**  p<0.01","\n", " *  p<0.05","\n", "\n","Correlation")) +   #设置图例
scale_x_discrete(position = "bottom")      #X轴名称显示位置
dev.off()
